// Generated by Haxe 4.1.1
#include <hxcpp.h>

#ifndef INCLUDED_16d41c6fc5b8bf5d
#define INCLUDED_16d41c6fc5b8bf5d
#include "maglev/MagLev.h"
#endif
#ifndef INCLUDED_869a921fcf5bba54
#define INCLUDED_869a921fcf5bba54
#include "maglev/MagLevAny.h"
#endif
#ifndef INCLUDED_20db69a30a45e926
#define INCLUDED_20db69a30a45e926
#include "maglev/MagLevArray.h"
#endif
#ifndef INCLUDED_d8a74f90a5c0b964
#define INCLUDED_d8a74f90a5c0b964
#include "maglev/MagLevError.h"
#endif
#ifndef INCLUDED_7f9204b932c8d809
#define INCLUDED_7f9204b932c8d809
#include "maglev/MagLevFunction.h"
#endif
#ifndef INCLUDED_65acb6100057af6e
#define INCLUDED_65acb6100057af6e
#include "maglev/MagLevResult.h"
#endif
#ifndef INCLUDED_c859d2752ef86c43
#define INCLUDED_c859d2752ef86c43
#include "maglev/MagLevString.h"
#endif
#ifndef INCLUDED_reservedseating_ReservedSeating
#include <reservedseating/ReservedSeating.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_11_new,"reservedseating.ReservedSeating","new",0x693cb0ee,"reservedseating.ReservedSeating.new","reservedseating/ReservedSeating.hx",11,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_19_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",19,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_30_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",30,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_41_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",41,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_52_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",52,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_63_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",63,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_74_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",74,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_85_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",85,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_96_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",96,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_107_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",107,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_118_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",118,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_129_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",129,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_140_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",140,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_151_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",151,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_162_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",162,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_173_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",173,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_184_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",184,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_195_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",195,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_206_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",206,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_217_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",217,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_228_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",228,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_239_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",239,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_250_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",250,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_261_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",261,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_272_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",272,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_283_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",283,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_294_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",294,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_305_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",305,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_316_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",316,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_327_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",327,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_338_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",338,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_349_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",349,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_360_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",360,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_371_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",371,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_382_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",382,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_393_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",393,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_404_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",404,0x14725a83)
HX_LOCAL_STACK_FRAME(_hx_pos_098a7fcc4ecfaeef_16_registerMyMethods,"reservedseating.ReservedSeating","registerMyMethods",0xb74e2e91,"reservedseating.ReservedSeating.registerMyMethods","reservedseating/ReservedSeating.hx",16,0x14725a83)
namespace reservedseating{

void ReservedSeating_obj::__construct( ::maglev::MagLev maglev){
            	HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_11_new)
HXLINE(  12)		this->maglev = maglev;
HXLINE(  13)		this->registerMyMethods();
            	}

Dynamic ReservedSeating_obj::__CreateEmpty() { return new ReservedSeating_obj; }

void *ReservedSeating_obj::_hx_vtable = 0;

Dynamic ReservedSeating_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ReservedSeating_obj > _hx_result = new ReservedSeating_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool ReservedSeating_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x777a5820;
}

void ReservedSeating_obj::registerMyMethods(){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_19_registerMyMethods)
HXLINE(  20)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE(  21)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE(  22)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.CreateVenue",da,65,93,6c)));
HXLINE(  23)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE(  24)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE(  25)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.CreateVenue' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",b3,2a,2f,e0),data);
HXLINE(  26)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE(  27)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_30_registerMyMethods)
HXLINE(  31)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE(  32)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE(  33)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.CreateVenueConfiguration",7c,2a,d3,22)));
HXLINE(  34)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE(  35)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE(  36)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.CreateVenueConfiguration' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",21,63,8a,a2),data);
HXLINE(  37)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE(  38)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_2, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_41_registerMyMethods)
HXLINE(  42)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE(  43)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE(  44)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.CreateSeat",fa,10,99,73)));
HXLINE(  45)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE(  46)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE(  47)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.CreateSeat' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",1f,68,bb,4b),data);
HXLINE(  48)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE(  49)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_3, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_52_registerMyMethods)
HXLINE(  53)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE(  54)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE(  55)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.CreateEvent",85,4f,f9,ad)));
HXLINE(  56)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE(  57)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE(  58)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.CreateEvent' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",de,0c,18,85),data);
HXLINE(  59)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE(  60)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_4, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_63_registerMyMethods)
HXLINE(  64)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE(  65)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE(  66)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.CreateTable",79,3f,18,43)));
HXLINE(  67)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE(  68)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE(  69)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.CreateTable' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",d2,0a,5e,d0),data);
HXLINE(  70)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE(  71)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_5, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_74_registerMyMethods)
HXLINE(  75)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE(  76)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE(  77)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.CreateOrder",f9,77,55,6d)));
HXLINE(  78)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE(  79)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE(  80)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.CreateOrder' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",52,03,e4,5f),data);
HXLINE(  81)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE(  82)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_6, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_85_registerMyMethods)
HXLINE(  86)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE(  87)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE(  88)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.GetVenue",92,63,f5,21)));
HXLINE(  89)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE(  90)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE(  91)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.GetVenue' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",37,c1,21,8e),data);
HXLINE(  92)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE(  93)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_7, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_96_registerMyMethods)
HXLINE(  97)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE(  98)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE(  99)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.GetVenueConfiguration",c4,f9,ca,1c)));
HXLINE( 100)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 101)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 102)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.GetVenueConfiguration' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",1d,0a,91,95),data);
HXLINE( 103)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 104)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_8, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_107_registerMyMethods)
HXLINE( 108)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE( 109)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE( 110)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.GetSeat",42,32,f4,cd)));
HXLINE( 111)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 112)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 113)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.GetSeat' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",1b,0e,9a,e0),data);
HXLINE( 114)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 115)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_9, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_118_registerMyMethods)
HXLINE( 119)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE( 120)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE( 121)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.GetEvent",3d,4d,5b,63)));
HXLINE( 122)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 123)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 124)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.GetEvent' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",62,a3,0a,33),data);
HXLINE( 125)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 126)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_10, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_129_registerMyMethods)
HXLINE( 130)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE( 131)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE( 132)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.GetTable",31,3d,7a,f8)));
HXLINE( 133)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 134)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 135)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.GetTable' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",56,a1,50,7e),data);
HXLINE( 136)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 137)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_11, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_140_registerMyMethods)
HXLINE( 141)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE( 142)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE( 143)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.UpdateVenue",ad,97,b0,28)));
HXLINE( 144)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 145)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 146)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.UpdateVenue' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",06,d1,d3,05),data);
HXLINE( 147)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 148)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_12, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_151_registerMyMethods)
HXLINE( 152)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE( 153)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE( 154)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.UpdateVenueConfiguration",c9,10,67,fa)));
HXLINE( 155)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 156)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 157)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.UpdateVenueConfiguration' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",ee,04,a8,48),data);
HXLINE( 158)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 159)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_13, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_162_registerMyMethods)
HXLINE( 163)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE( 164)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE( 165)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.UpdateSeat",87,3a,c0,19)));
HXLINE( 166)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 167)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 168)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.UpdateSeat' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",2c,2d,e3,a8),data);
HXLINE( 169)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 170)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_14, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_173_registerMyMethods)
HXLINE( 174)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE( 175)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE( 176)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.UpdateEvent",58,81,16,6a)));
HXLINE( 177)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 178)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 179)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.UpdateEvent' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",31,b3,bc,aa),data);
HXLINE( 180)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 181)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_15, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_184_registerMyMethods)
HXLINE( 185)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE( 186)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE( 187)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.UpdateTable",4c,71,35,ff)));
HXLINE( 188)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 189)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 190)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.UpdateTable' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",25,b1,02,f6),data);
HXLINE( 191)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 192)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_16, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_195_registerMyMethods)
HXLINE( 196)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE( 197)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE( 198)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.DeleteVenue",4b,62,0d,d3)));
HXLINE( 199)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 200)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 201)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.DeleteVenue' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",a4,b8,86,c2),data);
HXLINE( 202)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 203)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_17, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_206_registerMyMethods)
HXLINE( 207)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE( 208)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE( 209)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.DeleteVenueConfiguration",6b,7b,4d,f1)));
HXLINE( 210)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 211)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 212)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.DeleteVenueConfiguration' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",90,32,ea,91),data);
HXLINE( 213)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 214)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_18, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_217_registerMyMethods)
HXLINE( 218)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE( 219)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE( 220)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.DeleteSeat",a9,2d,58,b4)));
HXLINE( 221)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 222)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 223)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.DeleteSeat' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",4e,a3,17,fa),data);
HXLINE( 224)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 225)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_19, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_228_registerMyMethods)
HXLINE( 229)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE( 230)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE( 231)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.DeleteEvent",f6,4b,73,14)));
HXLINE( 232)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 233)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 234)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.DeleteEvent' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",cf,9a,6f,67),data);
HXLINE( 235)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 236)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_20, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_239_registerMyMethods)
HXLINE( 240)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE( 241)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE( 242)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.DeleteTable",ea,3b,92,a9)));
HXLINE( 243)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 244)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 245)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.DeleteTable' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",c3,98,b5,b2),data);
HXLINE( 246)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 247)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_21, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_250_registerMyMethods)
HXLINE( 251)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE( 252)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE( 253)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.DeleteOrder",6a,74,cf,d3)));
HXLINE( 254)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 255)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 256)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.DeleteOrder' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",43,91,3b,42),data);
HXLINE( 257)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 258)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_22, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_261_registerMyMethods)
HXLINE( 262)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE( 263)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE( 264)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.CompleteOrder",dc,c0,3e,37)));
HXLINE( 265)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 266)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 267)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.CompleteOrder' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",35,ab,a9,7b),data);
HXLINE( 268)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 269)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_23, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_272_registerMyMethods)
HXLINE( 273)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE( 274)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE( 275)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.AddSeatToOrder",46,93,06,0f)));
HXLINE( 276)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 277)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 278)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.AddSeatToOrder' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",6b,97,65,cc),data);
HXLINE( 279)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 280)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_24, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_283_registerMyMethods)
HXLINE( 284)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE( 285)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE( 286)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.ContinueOrder",6e,4a,ce,6c)));
HXLINE( 287)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 288)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 289)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.ContinueOrder' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",c7,df,84,8e),data);
HXLINE( 290)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 291)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_25, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_294_registerMyMethods)
HXLINE( 295)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE( 296)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE( 297)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.AutoSelect",a4,f9,b8,ea)));
HXLINE( 298)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 299)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 300)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.AutoSelect' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",c9,5f,cf,cd),data);
HXLINE( 301)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 302)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_26, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_305_registerMyMethods)
HXLINE( 306)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE( 307)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE( 308)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.CancelEvent",47,80,a6,22)));
HXLINE( 309)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 310)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 311)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.CancelEvent' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",a0,30,67,99),data);
HXLINE( 312)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 313)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_27, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_316_registerMyMethods)
HXLINE( 317)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE( 318)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE( 319)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.CancelReservation",f9,5f,8e,35)));
HXLINE( 320)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 321)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 322)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.CancelReservation' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",d2,42,59,47),data);
HXLINE( 323)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 324)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_28, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_327_registerMyMethods)
HXLINE( 328)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE( 329)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE( 330)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.GetSeatsAndTablesForEvent",1c,40,0b,43)));
HXLINE( 331)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 332)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 333)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.GetSeatsAndTablesForEvent' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",75,19,30,07),data);
HXLINE( 334)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 335)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_29, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_338_registerMyMethods)
HXLINE( 339)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE( 340)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE( 341)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.FindAbandonedOrders",e7,10,cf,75)));
HXLINE( 342)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 343)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 344)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.FindAbandonedOrders' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",40,bb,d2,30),data);
HXLINE( 345)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 346)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_30, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_349_registerMyMethods)
HXLINE( 350)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE( 351)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE( 352)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.GetOrdersForUser",72,b8,f7,ad)));
HXLINE( 353)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 354)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 355)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.GetOrdersForUser' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",17,1c,4b,c3),data);
HXLINE( 356)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 357)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_31, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_360_registerMyMethods)
HXLINE( 361)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE( 362)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE( 363)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.GetAllEventsOnSale",e3,88,89,8f)));
HXLINE( 364)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 365)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 366)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.GetAllEventsOnSale' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",88,9b,a9,c3),data);
HXLINE( 367)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 368)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_32, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_371_registerMyMethods)
HXLINE( 372)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE( 373)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE( 374)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.UpdateVenueConfigurationAvailability",44,e3,e6,8c)));
HXLINE( 375)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 376)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 377)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.UpdateVenueConfigurationAvailability' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",e9,d8,2f,8f),data);
HXLINE( 378)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 379)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_33, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_382_registerMyMethods)
HXLINE( 383)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE( 384)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE( 385)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.GetVenueConfigurations",2f,92,cf,14)));
HXLINE( 386)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 387)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 388)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.GetVenueConfigurations' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",d4,d1,21,fb),data);
HXLINE( 389)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 390)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_34, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_393_registerMyMethods)
HXLINE( 394)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE( 395)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE( 396)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.GetOrderSummary",75,45,6c,9a)));
HXLINE( 397)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 398)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 399)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.GetOrderSummary' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",ce,af,16,33),data);
HXLINE( 400)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 401)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_35, ::maglev::MagLev,bus) HXARGC(1)
            		 ::maglev::MagLevResult _hx_run( ::maglev::MagLevArray args){
            			HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_404_registerMyMethods)
HXLINE( 405)			 ::maglev::MagLevArray data = ::maglev::MagLevArray_obj::create();
HXLINE( 406)			data->push(::maglev::MagLevString_obj::fromString(HX_("_not_implemented_",a8,29,87,20)));
HXLINE( 407)			data->push(::maglev::MagLevString_obj::fromString(HX_("ReservedSeating.GetAllVenuesByOwner",f4,05,de,c4)));
HXLINE( 408)			data->push(::maglev::MagLevString_obj::fromString(HX_("reservedseating",55,8a,ca,39)));
HXLINE( 409)			bus->call(HX_("MindPowered.Telemetry.Send",79,51,dc,d8),data);
HXLINE( 410)			 ::maglev::MagLevError err = ::maglev::MagLevError_obj::create(-20000,HX_("You are trying to use the 'ReservedSeating.GetAllVenuesByOwner' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.",cd,8b,bf,26),data);
HXLINE( 411)			 ::maglev::MagLevResult result = ::maglev::MagLevResult_obj::fromError(err);
HXLINE( 412)			return result;
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACKFRAME(&_hx_pos_098a7fcc4ecfaeef_16_registerMyMethods)
HXLINE(  17)		 ::maglev::MagLev bus = this->maglev;
HXLINE(  19)		 ::maglev::MagLev _hx_tmp = this->maglev;
HXDLIN(  19)		_hx_tmp->_hx_register(HX_("ReservedSeating.CreateVenue",da,65,93,6c),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_0(bus))));
HXLINE(  30)		 ::maglev::MagLev _hx_tmp1 = this->maglev;
HXDLIN(  30)		_hx_tmp1->_hx_register(HX_("ReservedSeating.CreateVenueConfiguration",7c,2a,d3,22),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_1(bus))));
HXLINE(  41)		 ::maglev::MagLev _hx_tmp2 = this->maglev;
HXDLIN(  41)		_hx_tmp2->_hx_register(HX_("ReservedSeating.CreateSeat",fa,10,99,73),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_2(bus))));
HXLINE(  52)		 ::maglev::MagLev _hx_tmp3 = this->maglev;
HXDLIN(  52)		_hx_tmp3->_hx_register(HX_("ReservedSeating.CreateEvent",85,4f,f9,ad),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_3(bus))));
HXLINE(  63)		 ::maglev::MagLev _hx_tmp4 = this->maglev;
HXDLIN(  63)		_hx_tmp4->_hx_register(HX_("ReservedSeating.CreateTable",79,3f,18,43),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_4(bus))));
HXLINE(  74)		 ::maglev::MagLev _hx_tmp5 = this->maglev;
HXDLIN(  74)		_hx_tmp5->_hx_register(HX_("ReservedSeating.CreateOrder",f9,77,55,6d),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_5(bus))));
HXLINE(  85)		 ::maglev::MagLev _hx_tmp6 = this->maglev;
HXDLIN(  85)		_hx_tmp6->_hx_register(HX_("ReservedSeating.GetVenue",92,63,f5,21),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_6(bus))));
HXLINE(  96)		 ::maglev::MagLev _hx_tmp7 = this->maglev;
HXDLIN(  96)		_hx_tmp7->_hx_register(HX_("ReservedSeating.GetVenueConfiguration",c4,f9,ca,1c),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_7(bus))));
HXLINE( 107)		 ::maglev::MagLev _hx_tmp8 = this->maglev;
HXDLIN( 107)		_hx_tmp8->_hx_register(HX_("ReservedSeating.GetSeat",42,32,f4,cd),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_8(bus))));
HXLINE( 118)		 ::maglev::MagLev _hx_tmp9 = this->maglev;
HXDLIN( 118)		_hx_tmp9->_hx_register(HX_("ReservedSeating.GetEvent",3d,4d,5b,63),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_9(bus))));
HXLINE( 129)		 ::maglev::MagLev _hx_tmp10 = this->maglev;
HXDLIN( 129)		_hx_tmp10->_hx_register(HX_("ReservedSeating.GetTable",31,3d,7a,f8),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_10(bus))));
HXLINE( 140)		 ::maglev::MagLev _hx_tmp11 = this->maglev;
HXDLIN( 140)		_hx_tmp11->_hx_register(HX_("ReservedSeating.UpdateVenue",ad,97,b0,28),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_11(bus))));
HXLINE( 151)		 ::maglev::MagLev _hx_tmp12 = this->maglev;
HXDLIN( 151)		_hx_tmp12->_hx_register(HX_("ReservedSeating.UpdateVenueConfiguration",c9,10,67,fa),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_12(bus))));
HXLINE( 162)		 ::maglev::MagLev _hx_tmp13 = this->maglev;
HXDLIN( 162)		_hx_tmp13->_hx_register(HX_("ReservedSeating.UpdateSeat",87,3a,c0,19),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_13(bus))));
HXLINE( 173)		 ::maglev::MagLev _hx_tmp14 = this->maglev;
HXDLIN( 173)		_hx_tmp14->_hx_register(HX_("ReservedSeating.UpdateEvent",58,81,16,6a),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_14(bus))));
HXLINE( 184)		 ::maglev::MagLev _hx_tmp15 = this->maglev;
HXDLIN( 184)		_hx_tmp15->_hx_register(HX_("ReservedSeating.UpdateTable",4c,71,35,ff),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_15(bus))));
HXLINE( 195)		 ::maglev::MagLev _hx_tmp16 = this->maglev;
HXDLIN( 195)		_hx_tmp16->_hx_register(HX_("ReservedSeating.DeleteVenue",4b,62,0d,d3),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_16(bus))));
HXLINE( 206)		 ::maglev::MagLev _hx_tmp17 = this->maglev;
HXDLIN( 206)		_hx_tmp17->_hx_register(HX_("ReservedSeating.DeleteVenueConfiguration",6b,7b,4d,f1),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_17(bus))));
HXLINE( 217)		 ::maglev::MagLev _hx_tmp18 = this->maglev;
HXDLIN( 217)		_hx_tmp18->_hx_register(HX_("ReservedSeating.DeleteSeat",a9,2d,58,b4),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_18(bus))));
HXLINE( 228)		 ::maglev::MagLev _hx_tmp19 = this->maglev;
HXDLIN( 228)		_hx_tmp19->_hx_register(HX_("ReservedSeating.DeleteEvent",f6,4b,73,14),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_19(bus))));
HXLINE( 239)		 ::maglev::MagLev _hx_tmp20 = this->maglev;
HXDLIN( 239)		_hx_tmp20->_hx_register(HX_("ReservedSeating.DeleteTable",ea,3b,92,a9),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_20(bus))));
HXLINE( 250)		 ::maglev::MagLev _hx_tmp21 = this->maglev;
HXDLIN( 250)		_hx_tmp21->_hx_register(HX_("ReservedSeating.DeleteOrder",6a,74,cf,d3),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_21(bus))));
HXLINE( 261)		 ::maglev::MagLev _hx_tmp22 = this->maglev;
HXDLIN( 261)		_hx_tmp22->_hx_register(HX_("ReservedSeating.CompleteOrder",dc,c0,3e,37),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_22(bus))));
HXLINE( 272)		 ::maglev::MagLev _hx_tmp23 = this->maglev;
HXDLIN( 272)		_hx_tmp23->_hx_register(HX_("ReservedSeating.AddSeatToOrder",46,93,06,0f),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_23(bus))));
HXLINE( 283)		 ::maglev::MagLev _hx_tmp24 = this->maglev;
HXDLIN( 283)		_hx_tmp24->_hx_register(HX_("ReservedSeating.ContinueOrder",6e,4a,ce,6c),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_24(bus))));
HXLINE( 294)		 ::maglev::MagLev _hx_tmp25 = this->maglev;
HXDLIN( 294)		_hx_tmp25->_hx_register(HX_("ReservedSeating.AutoSelect",a4,f9,b8,ea),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_25(bus))));
HXLINE( 305)		 ::maglev::MagLev _hx_tmp26 = this->maglev;
HXDLIN( 305)		_hx_tmp26->_hx_register(HX_("ReservedSeating.CancelEvent",47,80,a6,22),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_26(bus))));
HXLINE( 316)		 ::maglev::MagLev _hx_tmp27 = this->maglev;
HXDLIN( 316)		_hx_tmp27->_hx_register(HX_("ReservedSeating.CancelReservation",f9,5f,8e,35),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_27(bus))));
HXLINE( 327)		 ::maglev::MagLev _hx_tmp28 = this->maglev;
HXDLIN( 327)		_hx_tmp28->_hx_register(HX_("ReservedSeating.GetSeatsAndTablesForEvent",1c,40,0b,43),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_28(bus))));
HXLINE( 338)		 ::maglev::MagLev _hx_tmp29 = this->maglev;
HXDLIN( 338)		_hx_tmp29->_hx_register(HX_("ReservedSeating.FindAbandonedOrders",e7,10,cf,75),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_29(bus))));
HXLINE( 349)		 ::maglev::MagLev _hx_tmp30 = this->maglev;
HXDLIN( 349)		_hx_tmp30->_hx_register(HX_("ReservedSeating.GetOrdersForUser",72,b8,f7,ad),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_30(bus))));
HXLINE( 360)		 ::maglev::MagLev _hx_tmp31 = this->maglev;
HXDLIN( 360)		_hx_tmp31->_hx_register(HX_("ReservedSeating.GetAllEventsOnSale",e3,88,89,8f),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_31(bus))));
HXLINE( 371)		 ::maglev::MagLev _hx_tmp32 = this->maglev;
HXDLIN( 371)		_hx_tmp32->_hx_register(HX_("ReservedSeating.UpdateVenueConfigurationAvailability",44,e3,e6,8c),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_32(bus))));
HXLINE( 382)		 ::maglev::MagLev _hx_tmp33 = this->maglev;
HXDLIN( 382)		_hx_tmp33->_hx_register(HX_("ReservedSeating.GetVenueConfigurations",2f,92,cf,14),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_33(bus))));
HXLINE( 393)		 ::maglev::MagLev _hx_tmp34 = this->maglev;
HXDLIN( 393)		_hx_tmp34->_hx_register(HX_("ReservedSeating.GetOrderSummary",75,45,6c,9a),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_34(bus))));
HXLINE( 404)		 ::maglev::MagLev _hx_tmp35 = this->maglev;
HXDLIN( 404)		_hx_tmp35->_hx_register(HX_("ReservedSeating.GetAllVenuesByOwner",f4,05,de,c4),::maglev::MagLevFunction_obj::fromFunction( ::Dynamic(new _hx_Closure_35(bus))));
            	}


HX_DEFINE_DYNAMIC_FUNC0(ReservedSeating_obj,registerMyMethods,(void))


::hx::ObjectPtr< ReservedSeating_obj > ReservedSeating_obj::__new( ::maglev::MagLev maglev) {
	::hx::ObjectPtr< ReservedSeating_obj > __this = new ReservedSeating_obj();
	__this->__construct(maglev);
	return __this;
}

::hx::ObjectPtr< ReservedSeating_obj > ReservedSeating_obj::__alloc(::hx::Ctx *_hx_ctx, ::maglev::MagLev maglev) {
	ReservedSeating_obj *__this = (ReservedSeating_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ReservedSeating_obj), true, "reservedseating.ReservedSeating"));
	*(void **)__this = ReservedSeating_obj::_hx_vtable;
	__this->__construct(maglev);
	return __this;
}

ReservedSeating_obj::ReservedSeating_obj()
{
}

void ReservedSeating_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ReservedSeating);
	HX_MARK_MEMBER_NAME(maglev,"maglev");
	HX_MARK_END_CLASS();
}

void ReservedSeating_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(maglev,"maglev");
}

::hx::Val ReservedSeating_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"maglev") ) { return ::hx::Val( maglev ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"registerMyMethods") ) { return ::hx::Val( registerMyMethods_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val ReservedSeating_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"maglev") ) { maglev=inValue.Cast<  ::maglev::MagLev >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ReservedSeating_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("maglev",2a,df,2b,b3));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo ReservedSeating_obj_sMemberStorageInfo[] = {
	{::hx::fsUnknown /*  ::maglev::MagLev */ ,(int)offsetof(ReservedSeating_obj,maglev),HX_("maglev",2a,df,2b,b3)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *ReservedSeating_obj_sStaticStorageInfo = 0;
#endif

static ::String ReservedSeating_obj_sMemberFields[] = {
	HX_("maglev",2a,df,2b,b3),
	HX_("registerMyMethods",83,b1,0a,b9),
	::String(null()) };

::hx::Class ReservedSeating_obj::__mClass;

void ReservedSeating_obj::__register()
{
	ReservedSeating_obj _hx_dummy;
	ReservedSeating_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("reservedseating.ReservedSeating",fc,61,42,0a);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ReservedSeating_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ReservedSeating_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ReservedSeating_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ReservedSeating_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace reservedseating
